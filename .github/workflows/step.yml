name: Update Step Version
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 5"
jobs:
  update_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v5

      - name: Get latest step-cli release
        id: step_release
        run: |
          # get current and latest versions, update files if needed
          PACKAGE=(ca cli)
          for i in "${PACKAGE[@]}"; do
              case $i in
              ca)
                latest=$(curl -X GET  https://api.github.com/repos/smallstep/certificates/releases/latest | jq -rS '.tag_name | capture("v(?<semver>[0-9][0-9]?.[0-9][0-9]?.[0-9][0-9]?)").semver')
                ;;
              cli)
                latest=$(curl -X GET  https://api.github.com/repos/smallstep/cli/releases/latest | jq -rS '.tag_name | capture("v(?<semver>[0-9][0-9]?.[0-9][0-9]?.[0-9][0-9]?)").semver')
                ;;
              esac

              current=$(jq -r --arg i "${i}" '.[$i]' step.version 2>/dev/null)

              if [ "$latest" = "$current" ]; then
                  echo "${i} is current in 'step.version'"
                  declare "latest_$i"=$latest
              else
                  update_version_file=true
                  echo "${i} is out of date in 'step.version'"
                  declare "latest_$i"=$latest
              fi
              unset latest current
          done

          # update 'step.version' file
          if [ "$update_version_file" == true ]; then
              jq -n \
                  --arg CA "$latest_ca" \
                  --arg CLI "$latest_cli" \
                  '{"ca": $CA, "cli": $CLI}' >step.version

              echo "SmallStep release check complete, updated to latest packages."
          else
              update_version_file=false
              echo "SmallStep release check complete, packages are current."
          fi

          # Send vars to GH workflow ENV
          echo "latest_ca=$latest_ca" >> $GITHUB_OUTPUT
          echo "latest_cli=$latest_cli" >> $GITHUB_OUTPUT
          echo "UPDATE_VERSION_FILE="$update_version_file"" >> $GITHUB_ENV

      - name: Update 'step.version' file
        if: steps.step_release.outputs.current_tag != steps.step_release.outputs.release_tag
        env:
          RELEASE_TAG: ${{ steps.step_release.outputs.release_tag }}
        run: |
          # update 'step.version' file
          echo ${{ steps.step_release.outputs.release_tag }} > step.version

      - name: Create pull request
        if: env.UPDATE_VERSION_FILE
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          commit-message: update step-ca to ${{ steps.step_release.outputs.latest_ca }} and step-cli to ${{ steps.step_release.outputs.latest_cli }}
          title: update step-ca to ${{ steps.step_release.outputs.latest_ca }} and step-cli to ${{ steps.step_release.outputs.latest_cli }}
          body: |
            Update release check to the latest versions:
              - [step-ca][1] ${{ steps.step_release.outputs.latest_ca }}
              - [step-cli][2] ${{ steps.step_release.outputs.latest_cli }}

            Auto-generated by [create-pull-request][3]

            [1]: https://github.com/smallstep/certificates
            [2]: https://github.com/smallstep/cli/
            [3]: https://github.com/peter-evans/create-pull-request
          labels: dependencies, status/auto-created
          branch: update-step-version
