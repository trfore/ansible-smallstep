---
- name: Test CA Server
  hosts: ca_server
  gather_facts: false
  tasks:
    - name: Provisioners Test | Get step-ca Configuration
      ansible.builtin.slurp:
        src: "/etc/step-ca/config/ca.json"
      register: ca_config

    - name: Provisioners Test | Get Provisioners From step-ca Config
      ansible.builtin.set_fact:
        provisioners: "{{ ca_config['content'] | b64decode | from_json | json_query(jmesquery) }}"
      vars:
        jmesquery: "authority.provisioners[*].type"

    - name: Provisioners Test | Check That ACME and OIDC Are Added to Provisioners
      ansible.builtin.assert:
        that:
          - provisioners == ["JWK", "SSHPOP", "ACME"]

    - name: SSH Certificate Test | Check for Files
      ansible.builtin.include_tasks: ../tasks/file-check.yml
      loop:
        - /etc/step-ca/certs/ssh_host_ca_key.pub
        - /etc/step-ca/certs/ssh_user_ca_key.pub

- name: Test Client
  hosts: ca_clients
  gather_facts: false
  tasks:
    - name: Check for systemd Timers
      ansible.builtin.include_tasks: ../tasks/service-check.yml
      loop:
        - cert-renewer@{{ inventory_hostname }}.timer
        - ssh-cert-renewer@ssh_host_ecdsa_key.timer

    - name: SSH Certificate Test | Check for Files
      ansible.builtin.include_tasks: ../tasks/file-check.yml
      loop:
        - /etc/step-ca/certs/ssh_user_key.pub
        - /etc/ssh/ssh_host_ecdsa_key-cert.pub

    - name: SSH Certificate Test | Get TLS Dates
      ansible.builtin.shell: |
        set -o pipefail
        start="$(openssl x509 -in /etc/step/certs/*.crt -noout -startdate | awk -F '=' '{print $2}')"
        end="$(openssl x509 -in /etc/step/certs/*.crt -noout -enddate | awk -F '=' '{print $2}')"
        delta="$((($(date -d "$end" +%s) - $(date -d "$start" +%s))/86400))"

        echo $delta
      args:
        executable: /bin/bash
      register: cert_days_valid
      changed_when: cert_days_valid.rc != 0

    - name: SSH Certificate Test | Check TLS Dates
      ansible.builtin.assert:
        that: '"90" is in cert_days_valid.stdout'
